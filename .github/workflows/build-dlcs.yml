name: Build DLCS

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch: #
  
jobs:
  build:
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4

      - name: Prepare environment
        run: |
          sudo apt-get update
          sudo apt install build-essential clang flex bison g++ gawk gcc-multilib g++-multilib gettext git libncurses5-dev libssl-dev python3-setuptools rsync swig unzip zlib1g-dev file wget zstd
          sudo timedatectl set-timezone "Asia/Shanghai"
          sudo apt-get clean
          
      - name: Download OpenWrt SDK
        run: |
          wget https://downloads.openwrt.org/releases/24.10.0-rc2/targets/x86/64/openwrt-sdk-24.10.0-rc2-x86-64_gcc-13.3.0_musl.Linux-x86_64.tar.zst
          tar --zstd -xf openwrt-sdk-24.10.0-rc2-x86-64_gcc-13.3.0_musl.Linux-x86_64.tar.zst
          mv openwrt-sdk-24.10.0-rc2-x86-64_gcc-13.3.0_musl.Linux-x86_64 sdk
          
      - name: Add custom feeds
        run: |
          cd sdk
          echo "src-git myan https://github.com/myannnascar/dlcs.git" >> feeds.conf.default
          ./scripts/feeds update -a
          ./scripts/feeds install -a
          
      - name: Configure OpenWrt
        run: |
          cd sdk
          if [ -f ../.config ]; then 
            echo "Found .config in repository, copying..."
            cp ../.config .config 
          else
            echo ".config not found in repository, running 'make defconfig'..."
            make defconfig
          fi
          cp .config .config.old 
          make oldconfig

      - name: Compile DLCS
        run: |
          cd sdk
          for plugin in $(ls package/feeds/myan); do
            echo "Building $plugin ..."
            make package/feeds/myan/$plugin/compile V=s || echo "Failed to build $plugin"
          done

      - name: Sync build directory and commit changes
        run: |
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions@github.com"

          # 确保我们在仓库根目录
          cd $GITHUB_WORKSPACE

          # 删除旧的 build 目录并同步新文件
          rm -rf build/
          mkdir -p build
          rsync -avz --delete --exclude='*.o' sdk/bin/packages/x86_64/myan/* build/

          # 检查是否有变化并提交
          git add build/*
          if git diff --cached --exit-code; then
            echo "No changes to commit"
          else
            git commit -m "Update DLCS builds"
            git push origin HEAD:master
          fi
          
